// screens/BookAddScreen.js
import React, { useState } from 'react';
import { View, ScrollView, Alert } from 'react-native';
import { TextInput, Button, Text, HelperText, Dropdown } from 'react-native-paper';
import axios from 'axios';

export default function BookAddScreen() {
  const [form, setForm] = useState({
    title: '',
    author: '',
    publication_year: '',
    isbn: '',
    publisher: '',
    binding_type: '',
    pages: '',
    language: '',
    price: '',
    category: '',
    subject: '',
    location: '',
    total_copies: '',
    available_copies: '',
    ordered_by: '',
    description: '',
    status: '',
    edition: ''
  });

  const handleChange = (name, value) => {
    setForm(prev => ({ ...prev, [name]: value }));
  };

  const submitBook = async () => {
    try {
      const response = await axios.post('http://YOUR_SERVER_IP/add_book.php', form);
      Alert.alert('–ê–º–∂–∏–ª—Ç—Ç–∞–π', '–ù–æ–º –Ω—ç–º—ç–≥–¥–ª—ç—ç');
    } catch (err) {
      Alert.alert('–ê–ª–¥–∞–∞', '–ù–æ–º –Ω—ç–º—ç—Ö “Ø–µ–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞');
    }
  };

  return (
    <ScrollView style={{ padding: 16 }}>
      <Text variant="headlineMedium" style={{ marginBottom: 16 }}>üìö –ù–æ–º –Ω—ç–º—ç—Ö</Text>
      {[
        ['title', '–ì–∞—Ä—á–∏–≥'],
        ['author', '–ó–æ—Ö–∏–æ–≥—á'],
        ['publication_year', '–û–Ω'],
        ['isbn', 'ISBN'],
        ['publisher', '–•—ç–≤–ª—ç–ª–∏–π–Ω –≥–∞–∑–∞—Ä'],
        ['binding_type', '–•–∏–π—Ü'],
        ['pages', '–•—É—É–¥–∞—Å–Ω—ã —Ç–æ–æ'],
        ['language', '–•—ç–ª'],
        ['price', '“Æ–Ω—ç'],
        ['category', '–ö–∞—Ç–µ–≥–æ—Ä–∏'],
        ['subject', '–°—ç–¥—ç–≤'],
        ['location', '–ë–∞–π—Ä—à–∏–ª'],
        ['total_copies', '–ù–∏–π—Ç —Ö—É–≤—å'],
        ['available_copies', '–ß”©–ª”©”©—Ç —Ö—É–≤—å'],
        ['ordered_by', '–ó–∞—Ö–∏–∞–ª—Å–∞–Ω —Ö“Ø–Ω'],
        ['description', '–¢–∞–π–ª–±–∞—Ä'],
        ['status', '–°—Ç–∞—Ç—É—Å'],
        ['edition', '–•—ç–≤–ª—ç–ª']
      ].map(([key, label]) => (
        <TextInput
          key={key}
          label={label}
          value={form[key]}
          onChangeText={(value) => handleChange(key, value)}
          style={{ marginBottom: 12 }}
        />
      ))}
      <Button mode="contained" onPress={submitBook}>–ù–æ–º –Ω—ç–º—ç—Ö</Button>
    </ScrollView>
  );
}
